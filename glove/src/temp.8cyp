#include <Arduino.h>
#include <Arduino_JSON.h>
#include <SPI.h>
#include "api.h"
#include "hardware.h"
#include "ml.h"

int issueDetected = false;

void setup() {
  Serial.begin(9600);
  setupPins();
  setupWifi();

  Serial.println("Setup done");

  if (!modelInit(model, tensor_arena, kTensorArenaSize)) {
    Serial.println("Model initialization failed!");
    while (true)
      ;
  }
  Serial.println("Model initialization done.");
}

void sendDetectApi(TensorModel tensorModel) {
  issueDetected = true;
  setLED(0, 255);  //red
  handleMotor(true);

  JSONVar data;

  data["accuracy"] = tensorModel.maxVal;
  data["pose"] = tensorModel.maxIndex;

  // send api
  sendAPI("/detect", data);
}

void sendStatusApi() {
  // TODO
}

void sendCancelApi() {
  handleMotor(false);
  setLED(0, 0);  //off

  JSONVar data;
  sendAPI("/cancel", data);
}


void sendTrainingData() {
  JSONVar data;
  String jsonString = "[" + String(flexVals[0]) + "," + String(flexVals[1]) + "," + String(flexVals[2]) + "," + String(flexVals[3]) + "," + String(flexVals[4]) + "]";
  data["flexVals"] = jsonString;
  Serial.println(jsonString);

  // sendAPI("/train", data);
}

void training(){
  readSensors();
  sendTrainingData();
  delay(1000);
}

void prediction(){
  readSensors();
  TensorModel tensorModel = mlPredict(flexVals);
  displayResults(tensorModel);

  if(tensorModel.maxIndex == 1){
    sendDetectApi(tensorModel);
  }
}

void loop() {
// prediction();
}
